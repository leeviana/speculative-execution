
Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 1
  Block Size (bytes): 32

Access Time: 6.07496e-09
Cycle Time:  7.99836e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.07496
 tag side (ns): 6.05737
 decode_data (ns): 2.92313
 wordline_data (ns): 1.32956
 bitline_data (ns): 0.452976
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.84499
 wordline_tag (ns): 0.825016
 bitline_tag (ns): 0.252886
 sense_amp_tag (ns): 0.26
 compare (ns): 2.30022
 valid signal driver (ns): 0.574251
 data output driver (ns): 0.789293
 total data path (with output driver) (ns): 5.28567
 total tag path is dm (ns): 6.05737
 precharge time (ns): 1.92339

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 4
  Block Size (bytes): 32

Access Time: 9.14093e-09
Cycle Time:  1.11718e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.98848
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 1.27791
 bitline_tag (ns): -0.0315811
 sense_amp_tag (ns): 0.26
 compare (ns): 2.29478
 mux driver (ns): 2.37376
 sel inverter (ns): 0.345094
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.98848
 precharge time (ns): 2.03083

Cache Parameters:
  Size in bytes: 262144
  Number of sets: 1024
  Associativity: 4
  Block Size (bytes): 64

Access Time: 1.44948e-08
Cycle Time:  1.76863e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 11.3269
 tag side (ns): 12.2049
 decode_data (ns): 4.99158
 wordline_data (ns): 2.59771
 bitline_data (ns): 0.867749
 sense_amp_data (ns): 0.58
 decode_tag (ns): 4.52586
 wordline_tag (ns): 1.24192
 bitline_tag (ns): 0.46158
 sense_amp_tag (ns): 0.26
 compare (ns): 2.17054
 mux driver (ns): 3.21212
 sel inverter (ns): 0.332908
 data output driver (ns): 2.28987
 total data path (with output driver) (ns): 9.03704
 total tag path is set assoc (ns): 12.2049
 precharge time (ns): 3.19154
): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (4.98%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.2%)
Total Clock Power: 26.0975  (36.4%)
Int ALU Power: 4.66013  (6.49%)
FP ALU Power: 14.281  (19.9%)
Instruction Cache Power Consumption: 2.21363  (3.08%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.367%)
Data Cache Power Consumption: 5.18303  (7.22%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.26%)
Level 2 Cache Power Consumption: 4.2091 (5.86%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
warning: section `.comment' ignored...
sim: command line: ./sim-outorder -redir:sim results/b2lev-gcc -bpred 2lev benchmarks/cc1.alpha -O benchmarks/1stmt.i 

sim: simulation started @ Tue Nov 18 14:14:59 2014, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     results/b2lev-gcc # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                   2lev # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
warning: partially supported sigaction() call...
warning: partially supported sigprocmask() call...

sim: ** simulation statistics **
sim_num_insn              337337459 # total number of instructions committed
sim_num_refs              121895854 # total number of loads and stores committed
sim_num_loads              83205477 # total number of loads committed
sim_num_stores         38690377.0000 # total number of stores committed
sim_num_branches           58871770 # total number of branches committed
sim_elapsed_time                309 # total simulation time in seconds
sim_inst_rate          1091706.9871 # simulation speed (in insts/sec)
sim_total_insn            380585731 # total number of instructions executed
sim_total_refs            137959610 # total number of loads and stores executed
sim_total_loads            96111088 # total number of loads executed
sim_total_stores       41848522.0000 # total number of stores executed
sim_total_branches         65995002 # total number of branches executed
sim_cycle                 298979749 # total simulation time in cycles
sim_IPC                      1.1283 # instructions per cycle
sim_CPI                      0.8863 # cycles per instruction
sim_exec_BW                  1.2729 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.7300 # instruction per branch
IFQ_count                 559813255 # cumulative IFQ occupancy
IFQ_fcount                130923385 # cumulative IFQ full count
ifq_occupancy                1.8724 # avg IFQ occupancy (insn's)
ifq_rate                     1.2729 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.4709 # avg IFQ occupant latency (cycle's)
ifq_full                     0.4379 # fraction of time (cycle's) IFQ was full
RUU_count                2176797907 # cumulative RUU occupancy
RUU_fcount                 43101587 # cumulative RUU full count
ruu_occupancy                7.2808 # avg RUU occupancy (insn's)
ruu_rate                     1.2729 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  5.7196 # avg RUU occupant latency (cycle's)
ruu_full                     0.1442 # fraction of time (cycle's) RUU was full
LSQ_count                 796394380 # cumulative LSQ occupancy
LSQ_fcount                 27923383 # cumulative LSQ full count
lsq_occupancy                2.6637 # avg LSQ occupancy (insn's)
lsq_rate                     1.2729 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.0925 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0934 # fraction of time (cycle's) LSQ was full
sim_slip                 3176708840 # total number of slip cycles
avg_sim_slip                 9.4170 # the average slip between issue and retirement
bpred_2lev.lookups         67929295 # total number of bpred lookups
bpred_2lev.updates         58871770 # total number of updates
bpred_2lev.addr_hits       36328078 # total number of address-predicted hits
bpred_2lev.dir_hits        48696434 # total number of direction-predicted hits (includes addr-hits)
bpred_2lev.misses          10175336 # total number of misses
bpred_2lev.jr_hits          4970150 # total number of address-predicted hits for JR's
bpred_2lev.jr_seen          6303654 # total number of JR's seen
bpred_2lev.jr_non_ras_hits.PP       534851 # total number of address-predicted hits for non-RAS JR's
bpred_2lev.jr_non_ras_seen.PP      1713369 # total number of non-RAS JR's seen
bpred_2lev.bpred_addr_rate    0.6171 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_2lev.bpred_dir_rate    0.8272 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_2lev.bpred_jr_rate    0.7885 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_2lev.bpred_jr_non_ras_rate.PP    0.3122 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_2lev.retstack_pushes      5673886 # total number of address pushed onto ret-addr stack
bpred_2lev.retstack_pops      5339741 # total number of address popped off of ret-addr stack
bpred_2lev.used_ras.PP      4590285 # total number of RAS predictions used
bpred_2lev.ras_hits.PP      4435299 # total number of RAS hits
bpred_2lev.ras_rate.PP    0.9662 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              403943013 # total number of accesses
il1.hits                  391933890 # total number of hits
il1.misses                 12009123 # total number of misses
il1.replacements           12008611 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0297 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0297 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              127485544 # total number of accesses
dl1.hits                  124027853 # total number of hits
dl1.misses                  3457691 # total number of misses
dl1.replacements            3457179 # total number of replacements
dl1.writebacks               901161 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0271 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0271 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0071 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               16367975 # total number of accesses
ul2.hits                   15436977 # total number of hits
ul2.misses                   930998 # total number of misses
ul2.replacements             926902 # total number of replacements
ul2.writebacks               208386 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0569 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0566 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0127 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             403943013 # total number of accesses
itlb.hits                 403822720 # total number of hits
itlb.misses                  120293 # total number of misses
itlb.replacements            120229 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0003 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0003 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             128340581 # total number of accesses
dtlb.hits                 128292011 # total number of hits
dtlb.misses                   48570 # total number of misses
dtlb.replacements             48442 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0004 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0004 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           124963216.2889 # total power usage of rename unit
bpred_power            1352323190.2587 # total power usage of bpred unit
window_power           659046869.4679 # total power usage of instruction window
lsq_power              287971309.9482 # total power usage of load/store queue
regfile_power          1068096810.8667 # total power usage of arch. regfile
icache_power           740555418.8752 # total power usage of icache
dcache_power           1819263754.0915 # total power usage of dcache
dcache2_power          1258434303.7556 # total power usage of dcache2
alu_power              5663027883.3504 # total power usage of alu
falu_power             4269743237.4656 # total power usage of falu
resultbus_power        686918797.1478 # total power usage of resultbus
clock_power            7802615762.6404 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0975 # avg power usage of clock
fetch_stage_power      2092878609.1339 # total power usage of fetch stage
dispatch_stage_power   124963216.2889 # total power usage of dispatch stage
issue_stage_power      10374662917.7615 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             34.7002 # average power of issue unit per cycle
total_power            21463217316.6915 # total power per cycle
avg_total_power_cycle       71.7882 # average total power per cycle
avg_total_power_cycle_nofp_nod2      53.2981 # average total power per cycle
avg_total_power_insn        56.3952 # average total power per insn
avg_total_power_insn_nofp_nod2      41.8698 # average total power per insn
rename_power_cc1       51470612.7230 # total power usage of rename unit_cc1
bpred_power_cc1        226326638.0277 # total power usage of bpred unit_cc1
window_power_cc1       441164115.7613 # total power usage of instruction window_cc1
lsq_power_cc1          48146462.4816 # total power usage of lsq_cc1
regfile_power_cc1      541739353.5599 # total power usage of arch. regfile_cc1
icache_power_cc1       328137798.5139 # total power usage of icache_cc1
dcache_power_cc1       546142280.4212 # total power usage of dcache_cc1
dcache2_power_cc1      64443732.4902 # total power usage of dcache2_cc1
alu_power_cc1          777187837.7963 # total power usage of alu_cc1
resultbus_power_cc1    300191458.0323 # total power usage of resultbus_cc1
clock_power_cc1        2034516512.7057 # total power usage of clock_cc1
avg_rename_power_cc1         0.1722 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.7570 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.4756 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1610 # avg power usage of lsq_cc1
avg_regfile_power_cc1        1.8120 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.0975 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.8267 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.2155 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.5995 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.0041 # avg power usage of resultbus_cc1
avg_clock_power_cc1          6.8049 # avg power usage of clock_cc1
fetch_stage_power_cc1  554464436.5416 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 51470612.7230 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  2177275886.9829 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.8545 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1722 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          7.2824 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  5359466802.5132 # total power per cycle_cc1
avg_total_power_cycle_cc1      17.9259 # average total power per cycle_cc1
avg_total_power_insn_cc1      14.0822 # average total power per insn_cc1
rename_power_cc2       39767925.0882 # total power usage of rename unit_cc2
bpred_power_cc2        133142228.3764 # total power usage of bpred unit_cc2
window_power_cc2       286144220.2120 # total power usage of instruction window_cc2
lsq_power_cc2          32364479.7592 # total power usage of lsq_cc2
regfile_power_cc2      122356435.8647 # total power usage of arch. regfile_cc2
icache_power_cc2       328137798.5139 # total power usage of icache_cc2
dcache_power_cc2       387868792.9460 # total power usage of dcache_cc2
dcache2_power_cc2      34447184.4919 # total power usage of dcache2_cc2
alu_power_cc2          423887603.5257 # total power usage of alu_cc2
resultbus_power_cc2    170894913.7990 # total power usage of resultbus_cc2
clock_power_cc2        1198052641.1131 # total power usage of clock_cc2
avg_rename_power_cc2         0.1330 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.4453 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.9571 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1082 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.4092 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.0975 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.2973 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.1152 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.4178 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.5716 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.0071 # avg power usage of clock_cc2
fetch_stage_power_cc2  461280026.8903 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 39767925.0882 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  1335607194.7339 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.5428 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1330 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          4.4672 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  3157064223.6901 # total power per cycle_cc2
avg_total_power_cycle_cc2      10.5595 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.2953 # average total power per insn_cc2
rename_power_cc3       47117185.6116 # total power usage of rename unit_cc3
bpred_power_cc3        245857866.9107 # total power usage of bpred unit_cc3
window_power_cc3       303135754.7033 # total power usage of instruction window_cc3
lsq_power_cc3          56340484.9138 # total power usage of lsq_cc3
regfile_power_cc3      163322967.9861 # total power usage of arch. regfile_cc3
icache_power_cc3       369379561.4541 # total power usage of icache_cc3
dcache_power_cc3       516487075.8884 # total power usage of dcache_cc3
dcache2_power_cc3      153863955.5189 # total power usage of dcache2_cc3
alu_power_cc3          912471613.6085 # total power usage of alu_cc3
resultbus_power_cc3    200387749.0139 # total power usage of resultbus_cc3
clock_power_cc3        1759642299.4795 # total power usage of clock_cc3
avg_rename_power_cc3         0.1576 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.8223 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.0139 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1884 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.5463 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.2355 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.7275 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.5146 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.0520 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.6702 # avg power usage of resultbus_cc3
avg_clock_power_cc3          5.8855 # avg power usage of clock_cc3
fetch_stage_power_cc3  615237428.3647 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 47117185.6116 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  2142686633.6468 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.0578 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1576 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          7.1667 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  4728006515.0887 # total power per cycle_cc3
avg_total_power_cycle_cc3      15.8138 # average total power per cycle_cc3
avg_total_power_insn_cc3      12.4230 # average total power per insn_cc3
total_rename_access       380585731 # total number accesses of rename unit
total_bpred_access         58871770 # total number accesses of bpred unit
total_window_access      1392422412 # total number accesses of instruction window
total_lsq_access          130482591 # total number accesses of load/store queue
total_regfile_access      496567715 # total number accesses of arch. regfile
total_icache_access       415479096 # total number accesses of icache
total_dcache_access       127485544 # total number accesses of dcache
total_dcache2_access       16367975 # total number accesses of dcache2
total_alu_access          362975324 # total number accesses of alu
total_resultbus_access    388605905 # total number accesses of resultbus
avg_rename_access            1.2729 # avg number accesses of rename unit
avg_bpred_access             0.1969 # avg number accesses of bpred unit
avg_window_access            4.6572 # avg number accesses of instruction window
avg_lsq_access               0.4364 # avg number accesses of lsq
avg_regfile_access           1.6609 # avg number accesses of arch. regfile
avg_icache_access            1.3897 # avg number accesses of icache
avg_dcache_access            0.4264 # avg number accesses of dcache
avg_dcache2_access           0.0547 # avg number accesses of dcache2
avg_alu_access               1.2140 # avg number accesses of alu
avg_resultbus_access         1.2998 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  4 # max number accesses of bpred unit
max_window_access                17 # max number accesses of instruction window
max_lsq_access                    6 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                6 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         50.1512 # maximum cycle power usage of cc1
max_cycle_power_cc2         31.4080 # maximum cycle power usage of cc2
max_cycle_power_cc3         34.7509 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                1564672 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 277104 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120025f70 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  658 # total number of pages allocated
mem.page_mem                  5264k # total size of memory pages allocated
mem.ptab_misses              907309 # total first level page table misses
mem.ptab_accesses        2599078105 # total page table accesses
mem.ptab_miss_rate           0.0003 # first level page table miss rate

