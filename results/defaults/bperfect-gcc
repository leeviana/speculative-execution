
Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 1
  Block Size (bytes): 32

Access Time: 6.07496e-09
Cycle Time:  7.99836e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.07496
 tag side (ns): 6.05737
 decode_data (ns): 2.92313
 wordline_data (ns): 1.32956
 bitline_data (ns): 0.452976
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.84499
 wordline_tag (ns): 0.825016
 bitline_tag (ns): 0.252886
 sense_amp_tag (ns): 0.26
 compare (ns): 2.30022
 valid signal driver (ns): 0.574251
 data output driver (ns): 0.789293
 total data path (with output driver) (ns): 5.28567
 total tag path is dm (ns): 6.05737
 precharge time (ns): 1.92339

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 4
  Block Size (bytes): 32

Access Time: 9.14093e-09
Cycle Time:  1.11718e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.98848
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 1.27791
 bitline_tag (ns): -0.0315811
 sense_amp_tag (ns): 0.26
 compare (ns): 2.29478
 mux driver (ns): 2.37376
 sel inverter (ns): 0.345094
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.98848
 precharge time (ns): 2.03083

Cache Parameters:
  Size in bytes: 262144
  Number of sets: 1024
  Associativity: 4
  Block Size (bytes): 64

Access Time: 1.44948e-08
Cycle Time:  1.76863e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 11.3269
 tag side (ns): 12.2049
 decode_data (ns): 4.99158
 wordline_data (ns): 2.59771
 bitline_data (ns): 0.867749
 sense_amp_data (ns): 0.58
 decode_tag (ns): 4.52586
 wordline_tag (ns): 1.24192
 bitline_tag (ns): 0.46158
 sense_amp_tag (ns): 0.26
 compare (ns): 2.17054
 mux driver (ns): 3.21212
 sel inverter (ns): 0.332908
 data output driver (ns): 2.28987
 total data path (with output driver) (ns): 9.03704
 total tag path is set assoc (ns): 12.2049
 precharge time (ns): 3.19154
): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (4.98%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.2%)
Total Clock Power: 26.0975  (36.4%)
Int ALU Power: 4.66013  (6.49%)
FP ALU Power: 14.281  (19.9%)
Instruction Cache Power Consumption: 2.21363  (3.08%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.367%)
Data Cache Power Consumption: 5.18303  (7.22%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.26%)
Level 2 Cache Power Consumption: 4.2091 (5.86%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
warning: section `.comment' ignored...
sim: command line: ./sim-outorder -redir:sim results/bperfect-gcc -bpred perfect benchmarks/cc1.alpha -O benchmarks/1stmt.i 

sim: simulation started @ Sat Nov  1 15:20:48 2014, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     results/bperfect-gcc # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
warning: partially supported sigaction() call...
warning: partially supported sigprocmask() call...

sim: ** simulation statistics **
sim_num_insn              337337459 # total number of instructions committed
sim_num_refs              121895854 # total number of loads and stores committed
sim_num_loads              83205477 # total number of loads committed
sim_num_stores         38690377.0000 # total number of stores committed
sim_num_branches           58871770 # total number of branches committed
sim_elapsed_time                250 # total simulation time in seconds
sim_inst_rate          1349349.8360 # simulation speed (in insts/sec)
sim_total_insn            337337458 # total number of instructions executed
sim_total_refs            121895854 # total number of loads and stores executed
sim_total_loads            83205477 # total number of loads executed
sim_total_stores       38690377.0000 # total number of stores executed
sim_total_branches         58871770 # total number of branches executed
sim_cycle                 228738203 # total simulation time in cycles
sim_IPC                      1.4748 # instructions per cycle
sim_CPI                      0.6781 # cycles per instruction
sim_exec_BW                  1.4748 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.7300 # instruction per branch
IFQ_count                 580926644 # cumulative IFQ occupancy
IFQ_fcount                142758561 # cumulative IFQ full count
ifq_occupancy                2.5397 # avg IFQ occupancy (insn's)
ifq_rate                     1.4748 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.7221 # avg IFQ occupant latency (cycle's)
ifq_full                     0.6241 # fraction of time (cycle's) IFQ was full
RUU_count                2128650213 # cumulative RUU occupancy
RUU_fcount                 59416534 # cumulative RUU full count
ruu_occupancy                9.3061 # avg RUU occupancy (insn's)
ruu_rate                     1.4748 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  6.3102 # avg RUU occupant latency (cycle's)
ruu_full                     0.2598 # fraction of time (cycle's) RUU was full
LSQ_count                 772489909 # cumulative LSQ occupancy
LSQ_fcount                 27626338 # cumulative LSQ full count
lsq_occupancy                3.3772 # avg LSQ occupancy (insn's)
lsq_rate                     1.4748 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.2900 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1208 # fraction of time (cycle's) LSQ was full
sim_slip                 3360373434 # total number of slip cycles
avg_sim_slip                 9.9615 # the average slip between issue and retirement
il1.accesses              407359707 # total number of accesses
il1.hits                  395507982 # total number of hits
il1.misses                 11851725 # total number of misses
il1.replacements           11851213 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0291 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0291 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              120865617 # total number of accesses
dl1.hits                  117511860 # total number of hits
dl1.misses                  3353757 # total number of misses
dl1.replacements            3353245 # total number of replacements
dl1.writebacks               893761 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0277 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0277 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0074 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               16099243 # total number of accesses
ul2.hits                   15203573 # total number of hits
ul2.misses                   895670 # total number of misses
ul2.replacements             891574 # total number of replacements
ul2.writebacks               206159 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0556 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0554 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0128 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             407359707 # total number of accesses
itlb.hits                 407250051 # total number of hits
itlb.misses                  109656 # total number of misses
itlb.replacements            109592 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0003 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0003 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             121895854 # total number of accesses
dtlb.hits                 121848632 # total number of hits
dtlb.misses                   47222 # total number of misses
dtlb.replacements             47094 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0004 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0004 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           95604674.3323 # total power usage of rename unit
bpred_power            1034611801.7152 # total power usage of bpred unit
window_power           504212062.4029 # total power usage of instruction window
lsq_power              220316058.7710 # total power usage of load/store queue
regfile_power          817160847.8377 # total power usage of arch. regfile
icache_power           566571204.1816 # total power usage of icache
dcache_power           1391850525.5296 # total power usage of dcache
dcache2_power          962780930.1152 # total power usage of dcache2
alu_power              4332570435.9255 # total power usage of alu
falu_power             3266620560.9781 # total power usage of falu
resultbus_power        525535830.0619 # total power usage of resultbus
clock_power            5969488969.2626 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0975 # avg power usage of clock
fetch_stage_power      1601183005.8969 # total power usage of fetch stage
dispatch_stage_power   95604674.3323 # total power usage of dispatch stage
issue_stage_power      7937265842.8062 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             34.7002 # average power of issue unit per cycle
total_power            16420703340.1357 # total power per cycle
avg_total_power_cycle       71.7882 # average total power per cycle
avg_total_power_cycle_nofp_nod2      53.2981 # average total power per cycle
avg_total_power_insn        48.6774 # average total power per insn
avg_total_power_insn_nofp_nod2      36.1398 # average total power per insn
rename_power_cc1       51881184.4002 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       358701937.8884 # total power usage of instruction window_cc1
lsq_power_cc1          45519123.0807 # total power usage of lsq_cc1
regfile_power_cc1      463154440.1248 # total power usage of arch. regfile_cc1
icache_power_cc1       325669389.8139 # total power usage of icache_cc1
dcache_power_cc1       512826837.5083 # total power usage of dcache_cc1
dcache2_power_cc1      63234861.3387 # total power usage of dcache2_cc1
alu_power_cc1          680093966.8058 # total power usage of alu_cc1
resultbus_power_cc1    266920706.8777 # total power usage of resultbus_cc1
clock_power_cc1        1677896821.7447 # total power usage of clock_cc1
avg_rename_power_cc1         0.2268 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.5682 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1990 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.0248 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.4238 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.2420 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.2765 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.9732 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.1669 # avg power usage of resultbus_cc1
avg_clock_power_cc1          7.3354 # avg power usage of clock_cc1
fetch_stage_power_cc1  325669389.8139 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 51881184.4002 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  1927297433.4995 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.4238 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2268 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          8.4258 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  4445899269.5832 # total power per cycle_cc1
avg_total_power_cycle_cc1      19.4366 # average total power per cycle_cc1
avg_total_power_insn_cc1      13.1794 # average total power per insn_cc1
rename_power_cc2       35248853.7087 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       259423657.7137 # total power usage of instruction window_cc2
lsq_power_cc2          30343672.5081 # total power usage of lsq_cc2
regfile_power_cc2      115933495.1668 # total power usage of arch. regfile_cc2
icache_power_cc2       325669389.8139 # total power usage of icache_cc2
dcache_power_cc2       367727975.3492 # total power usage of dcache_cc2
dcache2_power_cc2      33881625.1731 # total power usage of dcache2_cc2
alu_power_cc2          393897967.8388 # total power usage of alu_cc2
resultbus_power_cc2    159049982.8669 # total power usage of resultbus_cc2
clock_power_cc2        1042437387.7789 # total power usage of clock_cc2
avg_rename_power_cc2         0.1541 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.1342 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1327 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.5068 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.4238 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.6076 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.1481 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.7220 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.6953 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.5573 # avg power usage of clock_cc2
fetch_stage_power_cc2  325669389.8139 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 35248853.7087 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  1244324881.4498 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.4238 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1541 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          5.4400 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  2763614007.9181 # total power per cycle_cc2
avg_total_power_cycle_cc2      12.0820 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.1924 # average total power per insn_cc2
rename_power_cc3       39621202.7962 # total power usage of rename unit_cc3
bpred_power_cc3        103461180.0072 # total power usage of bpred unit_cc3
window_power_cc3       270326878.2053 # total power usage of instruction window_cc3
lsq_power_cc3          47821641.3812 # total power usage of lsq_cc3
regfile_power_cc3      141584371.2237 # total power usage of arch. regfile_cc3
icache_power_cc3       349759571.4804 # total power usage of icache_cc3
dcache_power_cc3       457159565.3865 # total power usage of dcache_cc3
dcache2_power_cc3      123856311.7269 # total power usage of dcache2_cc3
alu_power_cc3          759145617.9492 # total power usage of alu_cc3
resultbus_power_cc3    176747945.3429 # total power usage of resultbus_cc3
clock_power_cc3        1459064278.4989 # total power usage of clock_cc3
avg_rename_power_cc3         0.1732 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4523 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.1818 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2091 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.6190 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.5291 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.9986 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.5415 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.3188 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.7727 # avg power usage of resultbus_cc3
avg_clock_power_cc3          6.3788 # avg power usage of clock_cc3
fetch_stage_power_cc3  453220751.4876 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 39621202.7962 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  1835057959.9920 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.9814 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1732 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          8.0225 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  3928548563.9985 # total power per cycle_cc3
avg_total_power_cycle_cc3      17.1749 # average total power per cycle_cc3
avg_total_power_insn_cc3      11.6458 # average total power per insn_cc3
total_rename_access       337337458 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access      1264159929 # total number accesses of instruction window
total_lsq_access          122926091 # total number accesses of load/store queue
total_regfile_access      469184741 # total number accesses of arch. regfile
total_icache_access       407359707 # total number accesses of icache
total_dcache_access       120865617 # total number accesses of dcache
total_dcache2_access       16099243 # total number accesses of dcache2
total_alu_access          337326854 # total number accesses of alu
total_resultbus_access    361671165 # total number accesses of resultbus
avg_rename_access            1.4748 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            5.5267 # avg number accesses of instruction window
avg_lsq_access               0.5374 # avg number accesses of lsq
avg_regfile_access           2.0512 # avg number accesses of arch. regfile
avg_icache_access            1.7809 # avg number accesses of icache
avg_dcache_access            0.5284 # avg number accesses of dcache
avg_dcache2_access           0.0704 # avg number accesses of dcache2
avg_alu_access               1.4747 # avg number accesses of alu
avg_resultbus_access         1.5812 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                16 # max number accesses of instruction window
max_lsq_access                    6 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                6 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              9 # max number accesses of resultbus
max_cycle_power_cc1         46.4849 # maximum cycle power usage of cc1
max_cycle_power_cc2         29.6377 # maximum cycle power usage of cc2
max_cycle_power_cc3         33.3721 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                1564672 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 277104 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120025f70 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  658 # total number of pages allocated
mem.page_mem                  5264k # total size of memory pages allocated
mem.ptab_misses              806030 # total first level page table misses
mem.ptab_accesses        2563039560 # total page table accesses
mem.ptab_miss_rate           0.0003 # first level page table miss rate

